2008-04-07 Shahzad Muzaffar  <Shahzad.Muzaffar@cern.ch>

	* SCRAM/Plugin/RuntimeEnv.pm: Cleanup.
	* BuildSystem/MakeInterface.pm: Run with full path to avoid picking
	it up from /usr/bin area.

2008-04-02 Shahzad Muzaffar  <Shahzad.Muzaffar@cern.ch>

	* SCRAM/Plugin/RuntimeEnv.pm: Now saves the tools runtime in 
	.SCRAM/<arch>/RuntimeEnvCache.db.gz file. Every time an external tool
	is changes (ToolCache.db.gz) file changes then this
	RuntimeEnvCache.db.gz file will be update too.
	It also now prints a warning message when it tries to setup
	runtime environment on top of a already set SCRAM V1 environment.
	* Configuration/ConfigArea.pm: Do not copy RuntimeEnvCache.db.gz 
	when creating a developer area.

2008-04-02 Shahzad Muzaffar  <Shahzad.Muzaffar@cern.ch>

	* SCRAM/Plugin/RuntimeEnv.pm: Newly added module for setting runtime
	environment.
	* SCRAM/SCRAM.pm, SCRAM/CMD.pm: Fixed to use new SCRAM::Plugin::RuntimeEnv
	for setting up the runtime environment.
	Now scram runtime behaviour is
	like this e.g for PATH runtime variable
	- At first "scramv1 runtime -csh", it will
	  - backup all the env variables it is going to modify with
	  the values set by scram
	    PATH => PATH_SCRAMRT=<values_set_by_scram>
	  - backup all the env variables with their initial values
	    PATH => SCRAMRT_PATH=<init_value_of_PATH>
	  - set the env variable with new values
	    PATH=<values_set_by_scram>:${SCRAMRT_PATH}
	- Now if you make changes in env after doing "scram runtime"
	  PATH=<your_new_changes1>:${PATH}
	  PATH=${PATH}:<your_new_changes2>
        - Next time when you do "scramv1 run" then it will set
	  - PATH_SCRAMRT=<values_set_by_scram>
	  - SCRAMRT_PATH=<value of ${PATH} with ${PATH_SCRAMRT} removed from it>
	  - PATH=<values_set_by_scram>:${SCRAMRT_PATH}
	  So in this case you will end up with
	  PATH=<values_set_by_scram>:<your_new_changes1>:<init_value_of_PATH>:<your_new_changes2>
	In case if the initial environment was set by SCRAM V1_x or V0_X then
	the next "scram runtime" will behave as old SCRAM i.e. changes you
	made after first "scram runtime" will be lost.
	
2008-03-13 Shahzad Muzaffar  <Shahzad.Muzaffar@cern.ch>

	* bin/scram: Make use of --arch <arch> to properly switch to a different
	scramdb.
	* SCRAM/Plugins/ProjectChkSum.pm: New perl module for generating
	checksum for a project config directory.
	* PackageList.pm: Updated according to the removed perl modules.
	* ActiveDoc/ActiveDoc.pm: Code cleanup.
	* ActiveDoc/Parse.pm, ActiveDoc/SimpleDoc.pm: Updated to properly parse
	XML and non-XML based files.
	* ActiveDoc/SimpleURLDoc.pm: Code cleanup (no more tool caching)
	* BuildSystem/ToolCache.pm: Code cleanup (no more tool caching) and no
	more raw tool data storage.
	* BuildSystem/ToolManager.pm: Code cleanup (no more tool caching),
	always read tools for config/toolbox/<arch>. No need to provide tool
	version while setting up tool.
	* BuildSystem/ToolParser.pm: Code cleanup, only support single tool
	version.
	* Cache/Cache.pm: Code for converting non-XML BuildFiles to XML-based
	files moved for CMD.pm.
	* Cache/CacheUtilities.pm: SCRAM internal caches are now zipped (much
	smaller size <500KB)
	* Configuration/BootStrapProject.pm: Easy bootstraping project area, no
	more requirements.xml files needed.
	* Configuration/ConfigArea.pm: Code cleanup and multiple arch dev
	support.
	* SCRAM/AutoToolSetup.pm: Cod ecleanup and updates for multiple arch dev
	support.
	* SCRAM/CMD.pm: Code cleanup, multiple arch support, convertion of
	non-XML BuildFiles to XML-based BuildFile.
	* SCRAM/Helper.pm: updated help messages.
	* SCRAM/ProdSymLinks.pm: Allowed environement variables to be used in
	key too i.e. $(SCRAM_ARCH}:/tmp/${HOME} possible.
	* SCRAM/SCRAM.pm: Code cleanup (merged code from ScramFunctions.pm).
	* SCRAM/ScramProjectDB.pm: Cleanup, no more reading of
	.SCRAM/Environment file when doing "scramv1 list".
	* Utilities/AddDir.pm: Some new utility functions added.
	* Utilities/CVSmodule.pm, Utilities/DataItem.pm, Utilities/HashDB.pm,
	Utilities/IndexedFileStore.pm, Utilities/SCRAMUtils.pm,
	Utilities/SVNmodule.pm, URL/*.pm: Removed perl modules.
